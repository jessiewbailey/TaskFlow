apiVersion: batch/v1
kind: Job
metadata:
  name: db-migration
  annotations:
    helm.sh/hook: pre-upgrade
    helm.sh/hook-weight: "1"
    helm.sh/hook-delete-policy: before-hook-creation
spec:
  backoffLimit: 3
  template:
    metadata:
      name: db-migration
    spec:
      restartPolicy: OnFailure
      initContainers:
        - name: wait-for-db
          image: busybox:1.35
          command: 
            - sh
            - -c
            - |
              echo "Waiting for database..."
              until nc -z postgres 5432; do
                echo "Database not ready, waiting..."
                sleep 2
              done
              echo "Database is ready!"
      containers:
        - name: migrate
          image: docker.io/jessiewbailey/taskflow-api:latest
          imagePullPolicy: Always
          command: ["sh", "-c"]
          args:
            - |
              echo "Running database migrations..."
              
              # Check if this is a fresh database
              if ! alembic current 2>/dev/null | grep -q "."; then
                echo "Fresh database detected. Stamping with baseline..."
                # Mark all existing migrations as applied for fresh deployments
                alembic stamp head
              fi
              
              # Run any pending migrations
              echo "Applying migrations..."
              alembic upgrade head
              
              echo "Migration complete!"
          env:
            - name: DATABASE_URL
              valueFrom:
                secretKeyRef:
                  name: taskflow-secrets
                  key: database-url
          envFrom:
            - configMapRef:
                name: taskflow-config
          volumeMounts:
            - name: alembic-config
              mountPath: /app/alembic.ini
              subPath: alembic.ini
      volumes:
        - name: alembic-config
          configMap:
            name: alembic-config