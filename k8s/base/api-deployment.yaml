# TaskFlow API Deployment
apiVersion: apps/v1
kind: Deployment
metadata:
  name: taskflow-api
  namespace: taskflow
  labels:
    app: taskflow-api
    app.kubernetes.io/name: taskflow-api
    app.kubernetes.io/component: backend
    app.kubernetes.io/part-of: taskflow
    app.kubernetes.io/version: "1.0.0"
spec:
  replicas: 1
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 1
      maxSurge: 1
  selector:
    matchLabels:
      app: taskflow-api
  template:
    metadata:
      labels:
        app: taskflow-api
        app.kubernetes.io/name: taskflow-api
        app.kubernetes.io/component: backend
        app.kubernetes.io/part-of: taskflow
    spec:
      # serviceAccountName: taskflow-api  # Removed - using default service account
      securityContext:
        runAsUser: 1000
        runAsGroup: 1000
        fsGroup: 1000
      initContainers:
        - name: ollama-config
          image: busybox:1.36
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
                - ALL
            privileged: false
            readOnlyRootFilesystem: false
            runAsNonRoot: true
            seccompProfile:
              type: RuntimeDefault
          command: ["/bin/sh"]
          args:
            - -c
            - |
              echo "Configuring Ollama host based on deployment mode..."
              if [ "$OLLAMA_DEPLOYMENT_MODE" = "internal" ]; then
                echo "Using internal Ollama service: http://ollama-service:11434"
                echo "http://ollama-service:11434" > /shared/ollama-host
              else
                echo "Using external Ollama host: $EXTERNAL_OLLAMA_HOST"
                echo "$EXTERNAL_OLLAMA_HOST" > /shared/ollama-host
              fi
              echo "Ollama host configuration complete"
          env:
            - name: OLLAMA_DEPLOYMENT_MODE
              valueFrom:
                configMapKeyRef:
                  name: taskflow-deployment-config
                  key: OLLAMA_DEPLOYMENT_MODE
            - name: EXTERNAL_OLLAMA_HOST
              valueFrom:
                configMapKeyRef:
                  name: taskflow-deployment-config
                  key: EXTERNAL_OLLAMA_HOST
          volumeMounts:
            - name: shared-config
              mountPath: /shared
      containers:
        - name: api
          image: docker.io/jessiewbailey/taskflow-api:latest
          imagePullPolicy: Always
          ports:
            - name: http
              containerPort: 8000
              protocol: TCP
          envFrom:
            - secretRef:
                name: taskflow-env
          env:
            # Service Discovery - How pods reference each other
            - name: DATABASE_URL
              value: "postgresql+asyncpg://$(POSTGRES_USER):$(POSTGRES_PASSWORD)@postgres:5432/$(POSTGRES_DB)"
            - name: AI_WORKER_URL
              value: "http://taskflow-ai:8001" # Service name resolution
            # Ollama Host - dynamically configured based on deployment mode
            - name: OLLAMA_DEPLOYMENT_MODE
              valueFrom:
                configMapKeyRef:
                  name: taskflow-deployment-config
                  key: OLLAMA_DEPLOYMENT_MODE
            - name: EXTERNAL_OLLAMA_HOST
              valueFrom:
                configMapKeyRef:
                  name: taskflow-deployment-config
                  key: EXTERNAL_OLLAMA_HOST
            - name: OLLAMA_HOST
              value: "http://ollama-service:11434" # Default, will be overridden by startup script
            - name: QDRANT_URL
              value: "http://qdrant:6333" # Qdrant service in same namespace
          readinessProbe:
            httpGet:
              path: /healthz
              port: http
            initialDelaySeconds: 15
            periodSeconds: 10
            timeoutSeconds: 5
            failureThreshold: 3
          livenessProbe:
            httpGet:
              path: /healthz
              port: http
            initialDelaySeconds: 30
            periodSeconds: 30
            timeoutSeconds: 5
            failureThreshold: 3
          startupProbe:
            httpGet:
              path: /healthz
              port: http
            initialDelaySeconds: 10
            periodSeconds: 5
            timeoutSeconds: 5
            failureThreshold: 30
          resources:
            requests:
              memory: "512Mi"
              cpu: "250m"
            limits:
              memory: "1Gi"
              cpu: "1000m"
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
                - ALL
            privileged: false
            readOnlyRootFilesystem: false
            runAsNonRoot: true
            seccompProfile:
              type: RuntimeDefault
          volumeMounts:
            # - name: docker-socket      # Removed due to PodSecurity restrictions
            #   mountPath: /var/run/docker.sock
            #   readOnly: false
            - name: config
              mountPath: /app/config
              readOnly: true
            - name: ui-labels
              mountPath: /app/config/ui-labels
              readOnly: true
            - name: shared-config
              mountPath: /shared
              readOnly: true
      volumes:
        # - name: docker-socket        # Removed due to PodSecurity restrictions
        #   hostPath:
        #     path: /var/run/docker.sock
        #     type: Socket
        - name: config
          configMap:
            name: taskflow-config
        - name: ui-labels
          configMap:
            name: taskflow-ui-labels
        - name: shared-config
          emptyDir: {}
      restartPolicy: Always
